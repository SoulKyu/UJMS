applicationSet:
  ## @param applicationSet.enabled Enable ApplicationSet controller
  ##
  enabled: true
  ## Argo CD applicationSet controller resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param applicationSet.resources.limits The resources limits for the Argo CD applicationSet controller containers
  ## @param applicationSet.resources.requests The requested resources for the Argo CD applicationSet controller containers
  ##
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

config:
  secret:
    ## Argo admin password
    ## @param config.secret.argocdServerAdminPassword Argo CD server admin password. Autogenerated by default.
    ##
    argocdServerAdminPassword: "MyRandomPassword"
    ## Password modification time defaults to current time if not set
    ## @param config.secret.argocdServerAdminPasswordMtime Argo CD server password modification time
    ## E.g:
    ## argocdServerAdminPasswordMtime: "2006-01-02T15:04:05Z"
    ##
    argocdServerAdminPasswordMtime: ""

server:
  ## Argo CD server resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param server.resources.limits The resources limits for the Argo CD server containers
  ## @param server.resources.requests The requested resources for the Argo CD server containers
  ##
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  ## Redirect all request to https
  ## @param server.insecure Disable HTTPS redirection for Argo CD server
  ##
  insecure: true

  ## Argo CD server URL
  ## @param server.url Argo CD server base URL. Required when configuring SSO. Required when enabling dex.
  ##
  url: "argocd.local.soulkyu.net"

  ## Configure the ingress for the Argo CD server
  ## Ref: https://kubernetes.io/docs/user-guide/ingress/
  ## @param server.ingress.enabled Enable the creation of an ingress for the Argo CD server
  ## @param server.ingress.pathType Path type for the Argo CD server ingress
  ## @param server.ingress.apiVersion Ingress API version for the Argo CD server ingress
  ## @param server.ingress.hostname Ingress hostname for the Argo CD server ingress
  ## @param server.ingress.annotations Annotations for the Argo CD server ingress. To enable certificate autogeneration, place here your cert-manager annotations.
  ## @param server.ingress.tls Enable TLS for the Argo CD server ingress
  ## @param server.ingress.extraHosts Extra hosts array for the Argo CD server ingress
  ## @param server.ingress.path Path array for the Argo CD server ingress
  ## @param server.ingress.extraPaths Extra paths for the Argo CD server ingress
  ## @param server.ingress.extraTls Extra TLS configuration for the Argo CD server ingress
  ## @param server.ingress.secrets Secrets array to mount into the Ingress
  ## @param server.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ##
  ingress:
    ## Set to true to enable ingress record generation
    ##
    enabled: true

    ## @param server.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false

    ## DEPRECATED: Use server.ingress.annotations instead of server.ingress.certManager
    ## certManager: false
    ##

    ## Ingress Path type
    ##
    pathType: ImplementationSpecific

    ## Override API Version (automatically detected if not set)
    ##
    apiVersion: ""

    ## When the ingress is enabled, a host pointing to this will be created
    ##
    hostname: argocd.local.soulkyu.net

    ## The Path to Argo CD server. You may need to set this to '/*' in order to use this
    ## with ALB ingress controllers.
    ##
    path: /

    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
      cert-manager.io/cluster-issuer: scaleway

    ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.secrets parameter to create this TLS secret or rely on cert-manager to create it
    ##
    tls: true

    ## The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    extraHosts: []
    ## - name: argocd.server.local
    ##   path: /
    ##

    ## Any additional arbitrary paths that may need to be added to the ingress under the main host.
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    extraPaths: []
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##

    ## The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    extraTls: []
    ## - hosts:
    ##     - argocd.server.local
    ##   secretName: argocd.server.local-tls
    ##

    ## If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ##
    secrets: []
    ## - name: argocd.server.local-tls
    ##   key:
    ##   certificate:
    ##

    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: "nginx"
    ## @param server.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []

  ## Configure the ingress resource that allows you to access the Argo CD gRPC API
  ## Ref: https://kubernetes.io/docs/user-guide/ingress/
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/
  ## @param server.ingressGrpc.enabled Enable the creation of an ingress for the Argo CD gRPC server
  ## @param server.ingressGrpc.pathType Path type for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.apiVersion Ingress API version for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.hostname Ingress hostname for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.annotations Annotations for the Argo CD gRPC server ingress. To enable certificate autogeneration, place here your cert-manager annotations
  ## @param server.ingressGrpc.tls Enable TLS for the Argo CD server ingress
  ## @param server.ingressGrpc.extraHosts Extra hosts array for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.path Path array for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.extraPaths Extra paths for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.extraTls Extra TLS configuration for the Argo CD gRPC server ingress
  ## @param server.ingressGrpc.secrets Secrets array to mount into the Ingress
  ## @param server.ingressGrpc.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ##
  ingressGrpc:
    ## Set to true to enable ingress record generation
    ##
    enabled: true

    ## @param server.ingressGrpc.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: true

    ## DEPRECATED: Use server.ingressGrpc.annotations instead of server.ingressGrpc.certManager
    ## certManager: false
    ##

    ## Ingress Path type
    ##
    pathType: ImplementationSpecific

    ## Override API Version (automatically detected if not set)
    ##
    apiVersion: ""

    ## When the ingress is enabled, a host pointing to this will be created
    ##
    hostname: grpc-argocd.local.soulkyu.net

    ## The Path to Argo CD server gRPC API. You may need to set this to '/*' in order to use this
    ## with ALB ingress controllers.
    ##
    path: /

    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}

    ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
    ##
    tls: false

    ## The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    extraHosts: []
    ## - name: argocd.server.local
    ##   path: /
    ##

    ## Any additional arbitrary paths that may need to be added to the ingress under the main host.
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    extraPaths: []
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##

    ## The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    extraTls: []
    ## - hosts:
    ##     - argocd.server.local
    ##   secretName: argocd.server.local-tls
    ##

    ## If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ##
    secrets: []
    ## - name: argocd.server.local-tls
    ##   key:
    ##   certificate:
    ##

    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: "nginx"
    ## @param server.ingressGrpc.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.server.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []

repoServer:
  ## Argo CD repo server resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param repoServer.resources.limits The resources limits for the Argo CD repo server containers
  ## @param repoServer.resources.requests The requested resources for the Argo CD repo server containers
  ##
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi